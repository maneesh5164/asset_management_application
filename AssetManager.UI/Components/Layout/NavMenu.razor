@using AssetManager.Business.Services

@implements IDisposable
@inject LoginService LoginService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer


    <div class="top-row ps-3 navbar navbar-dark">
        <div class="container-fluid">
        <a class="navbar-brand" href="dashboard">Asset Manager</a>
        </div>
    </div>


<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="dashboard" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Dashboard
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="employees">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Employees
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="assets">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Asset
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="assignments">
                <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Asset Assignments
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <MudButton Variant="Variant.Text" Ripple="false"  Color="Color.Tertiary" StartIcon="@Icons.Material.Outlined.Logout" OnClick="@Logout" Size="Size.Small">
                Log out
            </MudButton>
        </div>
       
    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    public void Logout()
    {
        LoginService.Logout();
        NavigationManager.NavigateTo("/");
    }
}

