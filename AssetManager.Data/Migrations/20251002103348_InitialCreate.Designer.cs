// <auto-generated />
using System;
using AssetManager.Data.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetManager.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251002103348_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssetManager.Models.Data.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"));

                    b.Property<string>("AssetName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AssetType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsSpare")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("MakeModel")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Specifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("WarrantyExpiryDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssetId");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            AssetId = 1,
                            AssetName = "Dell Laptop",
                            AssetType = "Electronics",
                            Condition = "New",
                            IsSpare = false,
                            MakeModel = "Dell Latitude 5420",
                            PurchaseDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "DL12345",
                            Specifications = "i7, 16GB RAM, 512GB SSD",
                            Status = "Available",
                            WarrantyExpiryDate = new DateTime(2027, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AssetId = 2,
                            AssetName = "HP Printer",
                            AssetType = "Electronics",
                            Condition = "Good",
                            IsSpare = true,
                            MakeModel = "HP LaserJet Pro",
                            PurchaseDate = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SerialNumber = "HP98765",
                            Specifications = "Laser, Duplex Printing",
                            Status = "Available",
                            WarrantyExpiryDate = new DateTime(2026, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AssetManager.Models.Data.AssetAssignment", b =>
                {
                    b.Property<int>("AssetAssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetAssignmentId"));

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AssetAssignmentId");

                    b.HasIndex("AssetId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AssetAssignments");

                    b.HasData(
                        new
                        {
                            AssetAssignmentId = 1,
                            AssetId = 1,
                            AssignedDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            Notes = "Primary laptop"
                        });
                });

            modelBuilder.Entity("AssetManager.Models.Data.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Department = "IT",
                            Designation = "Developer",
                            Email = "john.doe@example.com",
                            FullName = "John Doe",
                            IsActive = true,
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Department = "HR",
                            Designation = "HR Manager",
                            Email = "jane.smith@example.com",
                            FullName = "Jane Smith",
                            IsActive = true,
                            PhoneNumber = "9876543210"
                        });
                });

            modelBuilder.Entity("AssetManager.Models.Data.AssetAssignment", b =>
                {
                    b.HasOne("AssetManager.Models.Data.Asset", "Asset")
                        .WithMany("AssetAssignments")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManager.Models.Data.Employee", "Employee")
                        .WithMany("AssetAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AssetManager.Models.Data.Asset", b =>
                {
                    b.Navigation("AssetAssignments");
                });

            modelBuilder.Entity("AssetManager.Models.Data.Employee", b =>
                {
                    b.Navigation("AssetAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
